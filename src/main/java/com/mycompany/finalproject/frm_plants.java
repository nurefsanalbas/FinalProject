/*test
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.finalproject;

import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nurefsanalbas
 */
public class frm_plants extends javax.swing.JFrame {

    DefaultTableModel tbl_plantsModel;
    int p_id;
    String p_genus;
    String plantClass;
    String p_gender;
    String p_habitat;
    String p_name;
    String laborant;
    boolean flowering;
    String p_species;
    int column = 0;

    /**
     * Creates new form frm_plants
     */
    public frm_plants() {
        initComponents();
        tbl_plantsModel = new DefaultTableModel();
        tbl_plantsModel.setColumnIdentifiers(new Object[]{"ID", "NAME", "PLANTCLASS", "GENUS", "SPECIES", "FLOWERING", "GENDER", "HABITAT", "LABORANT"});
        getPlants();
        tbl_plants.setModel(tbl_plantsModel);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popUp = new javax.swing.JPopupMenu();
        mitem_open = new javax.swing.JMenuItem();
        mitem_close = new javax.swing.JMenuItem();
        seperator = new javax.swing.JPopupMenu.Separator();
        mitem_back = new javax.swing.JMenuItem();
        jSplitPane1 = new javax.swing.JSplitPane();
        pnl_ptable = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_plants = new javax.swing.JTable();
        pnl_registration = new javax.swing.JPanel();
        lbl_registration = new javax.swing.JLabel();
        lbl_id = new javax.swing.JLabel();
        lbl_species = new javax.swing.JLabel();
        lbl_genus = new javax.swing.JLabel();
        txt_species = new javax.swing.JTextField();
        txt_genus = new javax.swing.JTextField();
        cb_flowering = new javax.swing.JCheckBox();
        cbx_gender = new javax.swing.JComboBox<>();
        lbl_gender = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_habitat = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_name = new javax.swing.JTextField();
        btn_add = new javax.swing.JButton();
        txt_class = new javax.swing.JTextField();
        lbl_class = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txt_laborant = new javax.swing.JTextField();
        txt_search = new javax.swing.JTextField();
        btn_search = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        spinner_id = new javax.swing.JSpinner();
        btn_update = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menu_file = new javax.swing.JMenu();
        cbx_open = new javax.swing.JCheckBoxMenuItem();
        menu_close = new javax.swing.JMenu();
        cbx_close = new javax.swing.JCheckBoxMenuItem();

        mitem_open.setText("Open new Form");
        mitem_open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitem_openActionPerformed(evt);
            }
        });
        popUp.add(mitem_open);

        mitem_close.setText("Close Form");
        mitem_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitem_closeActionPerformed(evt);
            }
        });
        popUp.add(mitem_close);
        popUp.add(seperator);

        mitem_back.setText("Back to Welcome Page");
        mitem_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitem_backActionPerformed(evt);
            }
        });
        popUp.add(mitem_back);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jSplitPane1.setDividerLocation(150);
        jSplitPane1.setDividerSize(5);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        pnl_ptable.setBackground(new java.awt.Color(204, 255, 204));
        pnl_ptable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnl_registrationMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                pnl_registrationMouseReleased(evt);
            }
        });

        tbl_plants.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tbl_plants.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_plantsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_plants);

        javax.swing.GroupLayout pnl_ptableLayout = new javax.swing.GroupLayout(pnl_ptable);
        pnl_ptable.setLayout(pnl_ptableLayout);
        pnl_ptableLayout.setHorizontalGroup(
            pnl_ptableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_ptableLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(274, Short.MAX_VALUE))
        );
        pnl_ptableLayout.setVerticalGroup(
            pnl_ptableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_ptableLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSplitPane1.setRightComponent(pnl_ptable);

        pnl_registration.setBackground(new java.awt.Color(204, 255, 204));
        pnl_registration.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnl_registrationMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                pnl_registrationMouseReleased(evt);
            }
        });

        lbl_registration.setFont(new java.awt.Font("Malayalam MN", 1, 14)); // NOI18N
        lbl_registration.setText("New Plant Registaration Form");

        lbl_id.setText("ID:");

        lbl_species.setText("Species:");

        lbl_genus.setText("Genus:");

        cb_flowering.setText("is it Flowering?");

        cbx_gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Hermaphrodite" }));

        lbl_gender.setText("Gender:");

        jLabel2.setText("Habitat:");

        jLabel3.setText("Name:");

        btn_add.setText("ADD");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        lbl_class.setText("Class:");

        jLabel1.setText("Laborant:");

        btn_search.setText("SEARCH");
        btn_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchActionPerformed(evt);
            }
        });

        btn_delete.setText("DELETE A ROW");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        spinner_id.setModel(new javax.swing.SpinnerNumberModel(1, 1, 1000, 1));

        btn_update.setText("UPDATE");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_registrationLayout = new javax.swing.GroupLayout(pnl_registration);
        pnl_registration.setLayout(pnl_registrationLayout);
        pnl_registrationLayout.setHorizontalGroup(
            pnl_registrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_registrationLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(pnl_registrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnl_registrationLayout.createSequentialGroup()
                        .addComponent(lbl_id, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(spinner_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnl_registrationLayout.createSequentialGroup()
                        .addGroup(pnl_registrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(lbl_class))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnl_registrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_class, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                            .addComponent(txt_name))))
                .addGap(18, 18, 18)
                .addGroup(pnl_registrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_registrationLayout.createSequentialGroup()
                        .addComponent(lbl_genus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_genus, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnl_registrationLayout.createSequentialGroup()
                        .addGroup(pnl_registrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cb_flowering)
                            .addGroup(pnl_registrationLayout.createSequentialGroup()
                                .addComponent(lbl_species)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_species, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(pnl_registrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnl_registrationLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_habitat, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnl_registrationLayout.createSequentialGroup()
                        .addComponent(lbl_gender)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbx_gender, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnl_registrationLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_laborant)))
                .addGroup(pnl_registrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_registrationLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(btn_search, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnl_registrationLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(pnl_registrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_registrationLayout.createSequentialGroup()
                        .addComponent(btn_add)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))
                    .addGroup(pnl_registrationLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(btn_delete)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(pnl_registrationLayout.createSequentialGroup()
                .addGap(330, 330, 330)
                .addComponent(lbl_registration)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnl_registrationLayout.setVerticalGroup(
            pnl_registrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_registrationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_registrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_registrationLayout.createSequentialGroup()
                        .addComponent(lbl_registration)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnl_registrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_id)
                            .addComponent(jLabel2)
                            .addComponent(txt_habitat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_genus)
                            .addComponent(txt_genus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spinner_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(pnl_registrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cb_flowering)
                            .addComponent(lbl_gender)
                            .addComponent(cbx_gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnl_registrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_laborant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(txt_species, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_species)
                            .addComponent(txt_class, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_class)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_registrationLayout.createSequentialGroup()
                        .addGroup(pnl_registrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_add, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_search, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnl_registrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnl_registrationLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(txt_search))
                            .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(pnl_registration);

        getContentPane().add(jSplitPane1);

        menu_file.setText("File");

        cbx_open.setSelected(true);
        cbx_open.setText("Open New Form");
        cbx_open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbx_openActionPerformed(evt);
            }
        });
        menu_file.add(cbx_open);

        jMenuBar1.add(menu_file);

        menu_close.setText("Close");

        cbx_close.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.META_DOWN_MASK));
        cbx_close.setSelected(true);
        cbx_close.setText("Close Registration Form");
        cbx_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbx_closeActionPerformed(evt);
            }
        });
        menu_close.add(cbx_close);

        jMenuBar1.add(menu_close);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        p_id = Integer.parseInt(spinner_id.getValue().toString());
        p_name = txt_name.getText();
        plantClass = txt_class.getText();
        p_genus = txt_genus.getText();
        p_species = txt_species.getText();
        if (cb_flowering.isSelected()) {
            flowering = true;
        } else {
            flowering = false;
        }
        p_gender = cbx_gender.getSelectedItem().toString();
        p_habitat = txt_habitat.getText();
        laborant = txt_laborant.getText();

        insertPlant(p_id, p_name, plantClass, p_genus, p_species, flowering, p_gender, p_habitat, laborant);
        getPlants();
    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        Update();
        btn_update.setEnabled(false);
        getPlants();
    }//GEN-LAST:event_btn_updateActionPerformed

    private void btn_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchActionPerformed
        Search(txt_search.getText());
    }//GEN-LAST:event_btn_searchActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        int row = tbl_plants.getSelectedRow();
        int id = (int) tbl_plants.getValueAt(row, column);
        Delete(id);
        getPlants();
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        txt_laborant.setText(frm_login.user);
    }//GEN-LAST:event_formWindowOpened

    private void tbl_plantsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_plantsMouseClicked
        if (SwingUtilities.isRightMouseButton(evt)) {
            if (tbl_plants.getSelectedRow() > -1) {
                int row = tbl_plants.getSelectedRow();
                int id = (int) tbl_plantsModel.getValueAt(row, 0);
                GetDataWihtId(id);
                btn_update.setEnabled(true);
            }
        }
    }//GEN-LAST:event_tbl_plantsMouseClicked

    private void mitem_openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitem_openActionPerformed
        frm_plants frm = new frm_plants();
        frm.setLocationRelativeTo(null);
        frm.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_mitem_openActionPerformed

    private void mitem_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitem_closeActionPerformed
       
        int value2 = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to close?", "Warning!", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if (value2 == JOptionPane.YES_OPTION) {

            this.dispose();
        } else {
            this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);

        }

    }//GEN-LAST:event_mitem_closeActionPerformed

    private void mitem_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitem_backActionPerformed
        frm_welcome frm = new frm_welcome();
        frm.setLocationRelativeTo(null);
        frm.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_mitem_backActionPerformed

    private void pnl_registrationMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_registrationMousePressed
     if (SwingUtilities.isRightMouseButton(evt)) {
            showPopUp(evt);
        }
    }//GEN-LAST:event_pnl_registrationMousePressed

    private void pnl_registrationMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnl_registrationMouseReleased
     if (SwingUtilities.isRightMouseButton(evt)) {
            showPopUp(evt);
        }
    }//GEN-LAST:event_pnl_registrationMouseReleased

    private void cbx_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbx_closeActionPerformed
      
        int value2 = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to close?", "Warning!", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if (value2 == JOptionPane.YES_OPTION) {

            this.dispose();
        } else {
            this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);

        }

    }//GEN-LAST:event_cbx_closeActionPerformed

    private void cbx_openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbx_openActionPerformed
        frm_plants frm = new frm_plants();
        frm.setLocationRelativeTo(null);
        frm.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_cbx_openActionPerformed
    public boolean insertPlant(int p_id, String p_name, String plantClass, String p_genus, String p_species, Boolean flowering, String p_gender, String p_habitat, String laborant) {

        boolean rvalue = false;
        Connection conn = null;
        try {

            Statement stmt = null;
            conn = DriverManager.getConnection("jdbc:derby://localhost:1527/ANIMALS", "APP", "as");
            stmt = conn.createStatement();

            String query = "INSERT INTO TBL_PLANTS VALUES(" + p_id + ",'" + p_name + "','" + plantClass + "','" + p_genus + "','" + p_species + "'," + flowering + ",'" + p_gender + "','" + p_habitat + "','" + laborant + "')";
            stmt.executeUpdate(query);

            conn.close();
            rvalue = true;
        } catch (SQLException ex) {
            Logger.getLogger(frm_animals.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            if (conn != null && !(conn.isClosed())) {
                conn.close();
            }
        } catch (SQLException ex) {
            Logger.getLogger(frm_animals.class.getName()).log(Level.SEVERE, null, ex);

        }
        return rvalue;

    }

    public boolean getPlants() {
        tbl_plantsModel.setRowCount(0);
        boolean rvalue = false;
        Connection conn = null;

        try {
            conn = DriverManager.getConnection("jdbc:derby://localhost:1527/ANIMALS", "APP", "as");
            Statement stmt = conn.createStatement();
            String query = "SELECT * FROM TBL_PLANTS ORDER BY ID DESC";
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {

                p_id = rs.getInt("ID");
                p_name = rs.getString("NAME");
                plantClass = rs.getString("PLANTCLASS");
                p_genus = rs.getString("GENUS");
                p_species = rs.getString("SPECIES");
                flowering = rs.getBoolean("FLOWERING");
                p_gender = rs.getString("GENDER");
                p_habitat = rs.getString("HABITAT");
                laborant = rs.getString("LABORANT");

                tbl_plantsModel.addRow(new Object[]{p_id, p_name, plantClass, p_genus, p_species, flowering, p_gender, p_habitat, laborant});

            }

            conn.close();
            rvalue = true;

        } catch (SQLException ex) {
            Logger.getLogger(frm_animals.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            if (conn != null && !(conn.isClosed())) {
                conn.close();
            }
        } catch (SQLException ex) {
            Logger.getLogger(frm_animals.class.getName()).log(Level.SEVERE, null, ex);

        }
        return rvalue;
    }

    public boolean Delete(int id) {

        tbl_plantsModel.setRowCount(0);
        boolean rvalue = false;
        Connection conn = null;

        try {
            conn = DriverManager.getConnection("jdbc:derby://localhost:1527/ANIMALS", "APP", "as");
            Statement stmt = conn.createStatement();
            String query = "DELETE FROM TBL_PLANTS WHERE ID=" + id;
            stmt.executeUpdate(query);

            conn.close();
            rvalue = true;

        } catch (SQLException ex) {
            Logger.getLogger(frm_animals.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            if (conn != null && !(conn.isClosed())) {
                conn.close();
            }
        } catch (SQLException ex) {
            Logger.getLogger(frm_animals.class.getName()).log(Level.SEVERE, null, ex);

        }
        return rvalue;
    }

    public boolean Search(String text) {
        tbl_plantsModel.setRowCount(0);
        boolean rvalue = false;
        Connection conn = null;

        try {
            conn = DriverManager.getConnection("jdbc:derby://localhost:1527/ANIMALS", "APP", "as");
            Statement stmt = conn.createStatement();
            String query = "SELECT * FROM TBL_PLANTS WHERE NAME LIKE '%" + text + "%'";
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                p_id = rs.getInt("ID");
                p_name = rs.getString("NAME");
                plantClass = rs.getString("PLANTCLASS");
                p_genus = rs.getString("GENUS");
                p_species = rs.getString("SPECIES");
                flowering = rs.getBoolean("FLOWERING");
                p_gender = rs.getString("GENDER");
                p_habitat = rs.getString("HABITAT");
                laborant = rs.getString("LABORANT");

                tbl_plantsModel.addRow(new Object[]{p_id, p_name, plantClass, p_genus, p_species, flowering, p_gender, p_habitat, laborant});

            }

            conn.close();
            rvalue = true;

        } catch (SQLException ex) {
            Logger.getLogger(frm_animals.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            if (conn != null && !(conn.isClosed())) {
                conn.close();
            }
        } catch (SQLException ex) {
            Logger.getLogger(frm_animals.class.getName()).log(Level.SEVERE, null, ex);

        }
        return rvalue;

    }

    public void Update() {
        try {
            p_id = (int) spinner_id.getValue();
            p_name = txt_name.getText();
            plantClass = txt_class.getText();
            p_genus = txt_genus.getText();
            p_species = txt_species.getText();
            p_gender = cbx_gender.getSelectedItem().toString();
            if (cb_flowering.isSelected()) {
                flowering = true;
            } else {
                flowering = false;
            }

            p_habitat = txt_habitat.getText();

            laborant = txt_laborant.getText();

            Connection conn = DriverManager.getConnection("jdbc:derby://localhost:1527/ANIMALS", "APP", "as");
            Statement stmt = conn.createStatement();
            String query = "UPDATE TBL_PLANTS SET NAME='" + p_name + "', GENDER='" + p_gender
                    + "', PLANTCLASS='" + plantClass + "', GENUS='" + p_genus + "', SPECIES='" + p_species + "', FLOWERING="
                    + flowering + ",HABITAT='" + p_habitat + "',LABORANT='" + laborant + "'WHERE id=" + p_id;
            stmt.executeUpdate(query);
            conn.close();

        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

    }

    public void GetDataWihtId(int id) {

        tbl_plantsModel.setRowCount(0);
        try {

            Connection conn = DriverManager.getConnection("jdbc:derby://localhost:1527/ANIMALS", "APP", "as");
            Statement stmt = conn.createStatement();
            String query = "SELECT * FROM TBL_PLANTS WHERE id=" + id;
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {

                p_name = rs.getString("NAME");
                plantClass = rs.getString("PLANTCLASS");
                p_genus = rs.getString("GENUS");
                p_species = rs.getString("SPECIES");
                flowering = rs.getBoolean("FLOWERING");
                p_gender = rs.getString("GENDER");
                p_habitat = rs.getString("HABITAT");
                laborant = rs.getString("LABORANT");

                spinner_id.setValue(id);
                txt_name.setText(p_name);
                txt_genus.setText(p_genus);
                txt_habitat.setText(p_habitat);
                txt_laborant.setText(laborant);
                txt_species.setText(p_species);
                txt_class.setText(plantClass);

                if (flowering == false) {
                    cb_flowering.setEnabled(false);
                } else {
                    cb_flowering.setEnabled(true);
                }
                switch (p_gender) {

                    case "Male":
                        cbx_gender.setSelectedIndex(0);
                        break;
                    case "Female":
                        cbx_gender.setSelectedIndex(1);
                        break;
                    case "Hermaphrodite":
                        cbx_gender.setSelectedIndex(2);
                        break;

                }

            }
            conn.close();

        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }
 private void showPopUp(MouseEvent evt) {

        if (evt.isPopupTrigger()) {
            popUp.show(evt.getComponent(), evt.getX(), evt.getY());
        }

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_plants.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_plants.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_plants.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_plants.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_plants().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_search;
    private javax.swing.JButton btn_update;
    private javax.swing.JCheckBox cb_flowering;
    private javax.swing.JCheckBoxMenuItem cbx_close;
    private javax.swing.JComboBox<String> cbx_gender;
    private javax.swing.JCheckBoxMenuItem cbx_open;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JLabel lbl_class;
    private javax.swing.JLabel lbl_gender;
    private javax.swing.JLabel lbl_genus;
    private javax.swing.JLabel lbl_id;
    private javax.swing.JLabel lbl_registration;
    private javax.swing.JLabel lbl_species;
    private javax.swing.JMenu menu_close;
    private javax.swing.JMenu menu_file;
    private javax.swing.JMenuItem mitem_back;
    private javax.swing.JMenuItem mitem_close;
    private javax.swing.JMenuItem mitem_open;
    private javax.swing.JPanel pnl_ptable;
    private javax.swing.JPanel pnl_registration;
    private javax.swing.JPopupMenu popUp;
    private javax.swing.JPopupMenu.Separator seperator;
    private javax.swing.JSpinner spinner_id;
    private javax.swing.JTable tbl_plants;
    private javax.swing.JTextField txt_class;
    private javax.swing.JTextField txt_genus;
    private javax.swing.JTextField txt_habitat;
    private javax.swing.JTextField txt_laborant;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_search;
    private javax.swing.JTextField txt_species;
    // End of variables declaration//GEN-END:variables
}
